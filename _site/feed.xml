<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
        <channel>
                <title>winter233's blog</title>
                <description></description>
                <link>http://winter233.github.io</link>
                <atom:link href="http://winter233.github.io/feed.xml" rel="self" type="application/rss+xml" />
                
                        <item>
                           <title>How to resolve the function call in arm disassembly</title>
                           <description>&lt;p&gt;In ARM ELF, function or procedure are performed via &lt;code&gt;bl&lt;/code&gt; and &lt;code&gt;blx&lt;/code&gt;, the &lt;a href=&quot;http://infocenter.arm.com/help/topic/com.arm.doc.ihi0042e/IHI0042E_aapcs.pdf&quot;&gt;aapcs&lt;/a&gt; writes:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Both the ARM and Thumb instruction sets contain a primitive subroutine call instruction, BL, which performs a branch-with-link operation. The effect of executing BL is to transfer the sequentially next value of the program counter, the return address, into the link register (LR) and the destination address into the program counter (PC). Bit 0 of the link register will be set to 1 if the BL instruction was executed from Thumb state, and to 0 if executed from ARM state. The result is to transfer control to the destination address, passing the return address in LR as an additional parameter to the called subroutine.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In disassembling, the address of &lt;code&gt;bl&lt;/code&gt;/&lt;code&gt;blx&lt;/code&gt; should be resolved to correspondent symbol. Some of the symbols could be found in &lt;code&gt;dynsym&lt;/code&gt; (also in &lt;code&gt;symtab&lt;/code&gt;), but others couldn&amp;#39;t.&lt;/p&gt;

&lt;p&gt;Here is an example. I disassemble libopencv_imgproc.so, which is a part of &lt;code&gt;openCV&lt;/code&gt; lib. &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;00176dac &amp;lt;cvResize&amp;gt;:
  176dac:   e92d40f0    push    {r4, r5, r6, r7, lr}
  176db0:   e1a03000    mov r3, r0
  176db4:   e24dd0fc    sub sp, sp, #252    ; 0xfc
  ...
  176dd4:   e59f4358    ldr r4, [pc, #856]  ; 177134 &amp;lt;cvResize+0x388&amp;gt;
  176dd8:   e58d5000    str r5, [sp]
  176ddc:   ebfaa33a    bl  1facc &amp;lt;_init+0x2cc&amp;gt;
  ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;First, locate the target address of &lt;code&gt;blx&lt;/code&gt;--&lt;code&gt;1facc&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;   1facc:   e28fc601    add ip, pc, #1048576    ; 0x100000
   1fad0:   e28cca7c    add ip, ip, #507904 ; 0x7c000
   1fad4:   e5bcf61c    ldr pc, [ip, #1564]!    ; 0x61c
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;calculate the result of &lt;code&gt;pc&lt;/code&gt;: &lt;code&gt;0x1fad4 + 0x100000 + 0x7c000 + 0x61c = 0x19c0f0&lt;/code&gt;. &lt;code&gt;0x19c0f0&lt;/code&gt; is a relocation address, which can be found in the &lt;code&gt;.rel.plt&lt;/code&gt; table (To get the relocation symbol of a file, using &lt;code&gt;objdump -r&lt;/code&gt; or &lt;code&gt;readelf -R&lt;/code&gt;).&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt; Offset     Info    Type            Sym.Value  Sym. Name
0019c0f0  00001316 R_ARM_JUMP_SLOT   00000000   _ZN2cv10cvarrToMatEPKv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Why relocation? &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Relocation information is used by linkers in order to bind symbols and addresses that could not be determined when the initial object was generated.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;the type of &lt;code&gt;rel.plt&lt;/code&gt; section is &lt;code&gt;REL&lt;/code&gt;, which is defined as&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Elf32_Addr&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r_offset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Elf32_Word&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r_info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Elf32_Rel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can only acquire two item of a relocation symbol directly, but there are 5 five items in the table. the other three can be calculated from the &lt;code&gt;r_info&lt;/code&gt; variable.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;r_offset&lt;/code&gt; is the relocation address. For an executable file or a shared object, the value is the virtual address of the storage unit affected by the relocation.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;r_info&lt;/code&gt; gives both the symbol table index with respect to which the relocation must be made, and the type of relocation to apply. &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;#define ELF32_R_SYM(i) ((i)&amp;gt;&amp;gt;8)
#define ELF32_R_TYPE(i) ((unsigned char)(i))
#define ELF32_R_INFO(s,t) (((s)&amp;lt;&amp;lt;8)+(unsigned char)(t))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As described above, the name of the symbol is the 19th &lt;code&gt;(0x1319&amp;gt;&amp;gt;8)&lt;/code&gt; entry of the &lt;code&gt;dynsym&lt;/code&gt;,&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Symbol table &amp;#39;.dynsym&amp;#39; contains 1656 entries:
   Num:    Value  Size Type    Bind   Vis      Ndx Name
    19: 00000000     0 FUNC    GLOBAL DEFAULT  UND _ZN2cv10cvarrToMatEPKvbbi
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;type is &lt;code&gt;(unsigned char)0x1316=0x16&lt;/code&gt; &lt;code&gt;R_ARM_JUMP_SLOT&lt;/code&gt;, which can be found in the &lt;a href=&quot;http://infocenter.arm.com/help/topic/com.arm.doc.ihi0044e/IHI0044E_aaelf.pdf&quot;&gt;aaelf&lt;/a&gt;. Relocation types are processor-specific.&lt;/p&gt;

&lt;p&gt;When dealing with a relocation symbol, first calculate the relocation address via &lt;code&gt;plt&lt;/code&gt; section, then find the correspondant item in &lt;code&gt;rel.plt&lt;/code&gt;, finally get the index in &lt;code&gt;dynsym&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;There are not only functions need to be relocated, some global variables also need relocate. The relocation of global variables can be found in &lt;code&gt;rel.dyn&lt;/code&gt;, which would be discribed in a later post.&lt;/p&gt;

&lt;p&gt;ref:&lt;br&gt;
1. &lt;a href=&quot;http://infocenter.arm.com/help/topic/com.arm.doc.ihi0044e/IHI0044E_aaelf.pdf&quot;&gt;aaelf&lt;/a&gt;&lt;br&gt;
2. &lt;a href=&quot;http://reverseengineering.stackexchange.com/questions/9033/how-to-recognize-the-function-call-in-a-dynamic-lib&quot;&gt;my question on stakcoverflow&lt;/a&gt;&lt;/p&gt;
</description>
                           <pubDate>Wed, 12 Aug 2015 00:00:00 +0800</pubDate>
                           <link>http://winter233.github.io/How-to-Resolve-the-Function-Call-in-ARM-elf/</link>
                           <guid isPermaLink="true">http://winter233.github.io/How-to-Resolve-the-Function-Call-in-ARM-elf/</guid>
                           </item>
                
                        <item>
                           <title>Vim处理文本实例以及比较文件</title>
                           <description>&lt;p&gt;标签（空格分隔）： vim&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;这两天一直在验证自己写的反汇编器的正确性。今天下午突然想直接把自己的反汇编结果和objdump的结果diff一下，这样就比较直观了。待处理的文件为opencv 2.3.1的imgproc动态库文件。&lt;/p&gt;

&lt;p&gt;处理前：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;   &lt;span class=&quot;m&quot;&gt;21&lt;/span&gt;b&lt;span class=&quot;m&quot;&gt;44&lt;/span&gt;:   e59d2018    ldr r2&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; [&lt;span class=&quot;k&quot;&gt;sp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; #&lt;span class=&quot;m&quot;&gt;24&lt;/span&gt;]
   &lt;span class=&quot;m&quot;&gt;21&lt;/span&gt;b&lt;span class=&quot;m&quot;&gt;48&lt;/span&gt;:   e59d3008    ldr r3&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; [&lt;span class=&quot;k&quot;&gt;sp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; #&lt;span class=&quot;m&quot;&gt;8&lt;/span&gt;]
   &lt;span class=&quot;m&quot;&gt;21&lt;/span&gt;b&lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;c:   e3a00001    mov r0&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; #&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
   &lt;span class=&quot;m&quot;&gt;21&lt;/span&gt;b&lt;span class=&quot;m&quot;&gt;50&lt;/span&gt;:   e5832000    str r2&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; [r3]
   &lt;span class=&quot;m&quot;&gt;21&lt;/span&gt;b&lt;span class=&quot;m&quot;&gt;54&lt;/span&gt;:   eaffffd3    &lt;span class=&quot;k&quot;&gt;b&lt;/span&gt;   &lt;span class=&quot;m&quot;&gt;21&lt;/span&gt;aa&lt;span class=&quot;m&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;_ZL15icvSklansky_32fPP12CvPoint2D32fiiPiii&lt;span class=&quot;p&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;x&lt;span class=&quot;m&quot;&gt;21&lt;/span&gt;c&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;m&quot;&gt;00021&lt;/span&gt;b&lt;span class=&quot;m&quot;&gt;58&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;_ZL24icvCalcAndWritePtIndicesPP7CvPointPiiiP5CvSeqP11CvSeqWriter.clone.&lt;span class=&quot;m&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;:
   &lt;span class=&quot;m&quot;&gt;21&lt;/span&gt;b&lt;span class=&quot;m&quot;&gt;58&lt;/span&gt;:   e92d4ff0    push    {r4&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; r5&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; r6&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; r7&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; r8&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; r9&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;sl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;fp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;lr&lt;/span&gt;}
   &lt;span class=&quot;m&quot;&gt;21&lt;/span&gt;b&lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;c:   e59fc2ec    ldr ip&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; [&lt;span class=&quot;k&quot;&gt;pc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; #&lt;span class=&quot;m&quot;&gt;748&lt;/span&gt;]  ; &lt;span class=&quot;m&quot;&gt;21&lt;/span&gt;e&lt;span class=&quot;m&quot;&gt;50&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;_ZL24icvCalcAndWritePtIndicesPP7CvPointPiiiP5CvSeqP11CvSeqWriter.clone.&lt;span class=&quot;m&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;x&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;f&lt;span class=&quot;m&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;m&quot;&gt;21&lt;/span&gt;b&lt;span class=&quot;m&quot;&gt;60&lt;/span&gt;:   e24dd07c    &lt;span class=&quot;k&quot;&gt;sub&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;sp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;sp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; #&lt;span class=&quot;m&quot;&gt;124&lt;/span&gt;    ; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;x&lt;span class=&quot;m&quot;&gt;7&lt;/span&gt;c
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;用的比较多的是vim的全局命令&lt;code&gt;:global&lt;/code&gt;，以及替换命令&lt;code&gt;:substitute&lt;/code&gt;。获取库文件的反汇编：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;objdump -D /usr/local/lib/libopencv_imgproc.so.2.3.1 &amp;gt; ~/imgproc.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;由于反汇编了整个文件，需要删除&lt;code&gt;.text&lt;/code&gt;节区以外的部分：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;/.text
dgg
/.&lt;span class=&quot;k&quot;&gt;fini&lt;/span&gt;
dG
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;删除&lt;code&gt;.text&lt;/code&gt;节区的前三个函数（反汇编器不处理这三个函数），方法也是&lt;code&gt;dgg&lt;/code&gt;。删除所有函数头所在行（以“:”结尾）：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/:$/&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;d&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;再将每一行中的指令地址和编码删去，只留下翻译后的指令：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;gg0&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;C&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;Gwwwx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后再删除&lt;code&gt;b&lt;/code&gt;指令后面“&amp;lt;&amp;gt;”之间的内容。最初我的设想是：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&amp;lt;/&lt;/span&gt;D
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这里并不识别&lt;code&gt;D&lt;/code&gt;，因此有了下面的方法，下找到&amp;quot;&amp;lt;.*&amp;gt;&amp;quot;，再将其整体替换为空格。命令中的&lt;code&gt;+&lt;/code&gt;相当于&lt;code&gt;/&lt;/code&gt;为分隔符。&lt;code&gt;:global&lt;/code&gt;命令的一般形式为：&lt;code&gt;:[range]global/{pattern}/{command}&lt;/code&gt;。&lt;code&gt;:substitute&lt;/code&gt;命令一般形式为：&lt;code&gt;:[range]substitute/from/to/[flags]&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;+&amp;lt;&lt;/span&gt;.*&lt;span class=&quot;p&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&amp;lt;.*/&lt;/span&gt;/&lt;span class=&quot;k&quot;&gt;g&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;+&lt;/span&gt;;.*&lt;span class=&quot;p&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/;.*/&lt;/span&gt;/&lt;span class=&quot;k&quot;&gt;g&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;第二句用于删除行末注释（以&amp;quot;;&amp;quot;开始）。&lt;/p&gt;

&lt;p&gt;删除所有空白行：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/^$/&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;d&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;删除所有行末空格：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;：%&lt;span class=&quot;k&quot;&gt;s&lt;/span&gt;\&lt;span class=&quot;k&quot;&gt;s&lt;/span&gt;\&lt;span class=&quot;p&quot;&gt;+&lt;/span&gt;$&lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;g&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;处理完毕，效果如图：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-asm&quot; data-lang=&quot;asm&quot;&gt;&lt;span class=&quot;nf&quot;&gt;ldr&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;r2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;sp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#24]&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;ldr&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;r3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;sp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#8]&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;mov&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;r0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#1&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;r2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;r3&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;b&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;aa8&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;push&lt;/span&gt;    &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;r4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;r5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;r6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;r7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;r8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;r9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;sl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;fp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;lr&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;ldr&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;pc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#748]&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;sub&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;sp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;sp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#124&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;使用vim diff比较文件&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;在terminal下直接输入命令：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;vimdiff a.txt b.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;已经打开a.txt：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;vertical&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;diffsplit&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;b&lt;/span&gt;.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;a.txt和b.txt都已打开，且处于垂直分屏状态：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;windo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;diffthis&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
                           <pubDate>Wed, 22 Jul 2015 00:00:00 +0800</pubDate>
                           <link>http://winter233.github.io/Vim-Batch-Processing-and-Diff/</link>
                           <guid isPermaLink="true">http://winter233.github.io/Vim-Batch-Processing-and-Diff/</guid>
                           </item>
                
                        <item>
                           <title>Share Files between Windows and Linux</title>
                           <description>&lt;h2&gt;Windows as host(Using CIFS)&lt;/h2&gt;

&lt;h3&gt;Operations on Windows&lt;/h3&gt;

&lt;p&gt;Slect the folder you would like to share, then right-click, follow options as follow: select &lt;code&gt;property&lt;/code&gt;, change to &lt;code&gt;share&lt;/code&gt; tab, click &lt;code&gt;share&lt;/code&gt;, then select user and authory. Finishing share by click &lt;code&gt;share&lt;/code&gt; button.&lt;/p&gt;

&lt;h3&gt;Operations on Linux&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Install CIFS&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;sudo apt-get install cifs-utils
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Mounting shared folders&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Create a mount point whereever you like, for example:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;sudo mkdir /media/windows_share
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add to configure file
edit file &lt;code&gt;/etc/fstab&lt;/code&gt;, add a new line: &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;//windows_ip/share_folder /media/windows_shre cifs username=windows_user,password=windows_passwd,iocharset=utf-8,sec=ntl 0 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you would like to do something in the shared folder(eg: compile a c program), you may encounter a fatal error:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Value too large for defined data type  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You have to append &lt;code&gt;nounix&lt;/code&gt;, &lt;code&gt;noserverino&lt;/code&gt; to the fourth.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;Linux as host(Using ftp or samba)&lt;/h2&gt;

&lt;h3&gt;Sharing via ftp&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Install vsftpd&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;sudo apt-get install vsftpd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Configuring vsftpd
Edit file &lt;code&gt;/etc/vsftd.conf&lt;/code&gt;, simply uncomment these lines to acquire read/write acess.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;annoymous_enable=NO
local_enable=YES
write_enable=YES
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;More options can be found in the file.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Start service&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;sudo service vsftpd start
sudo chkconfig vsftpd on
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;First command start vsftpd service, and the second enable service on startup.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;On windows, you can access your linux &lt;code&gt;HOME&lt;/code&gt; folder via a ftp client or a browser.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;Sharing via samba&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Install samba&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;sudo apt-get install samba samba-common
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;add a samba user&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;sudo smbpasswd -a username
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Edit file &lt;code&gt;/etc/samba/smb.conf&lt;/code&gt;, simply uncomment these lines:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;[homes]
    comment = Home Directores
    browseable = yes
    writeable = yes
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Start service&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;sudo service smbd start
sudo chkconfig smbd on
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Check samba user with &lt;code&gt;pdbedit -Lv&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Right-click &lt;code&gt;computer&lt;/code&gt;, select &lt;code&gt;Map Network Drive&lt;/code&gt;, type server info &lt;code&gt;\\server\shared_folder&lt;/code&gt; in the &lt;code&gt;Folder&lt;/code&gt; box, then type your smb user credential.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;Which is better&lt;/h2&gt;

&lt;p&gt;Generally, ftp is faster than samba/CIFS&lt;a href=&quot;http://arstechnica.com/civis/viewtopic.php?t=221436&quot;&gt;1&lt;/a&gt;. However, samba and CIFS is more convenient. If you just have to transfer a very big file, ftp is better. If you have a limited storage or you are working on a ARM board, CIFS is the best choice.&lt;/p&gt;

&lt;p&gt;Ref:&lt;br&gt;
1. &lt;a href=&quot;https://wiki.ubuntu.com/MountWindowsSharesPermanently&quot;&gt;Mount Windows Shares Permanently&lt;/a&gt;&lt;br&gt;
2. &lt;a href=&quot;https://www.samba.org/samba/docs/man/manpages-3/mount.cifs.8.html&quot;&gt;mount.cifs&lt;/a&gt;&lt;/p&gt;
</description>
                           <pubDate>Wed, 15 Jul 2015 00:00:00 +0800</pubDate>
                           <link>http://winter233.github.io/Share-Files-between-Windows-and-Linux/</link>
                           <guid isPermaLink="true">http://winter233.github.io/Share-Files-between-Windows-and-Linux/</guid>
                           </item>
                
                        <item>
                           <title>Using Vim with Neocomplete on Ubuntu 14.04</title>
                           <description>&lt;p&gt;&lt;a href=&quot;https://github.com/Shougo/neocomplete.vim&quot;&gt;Neocomplete&lt;/a&gt; is an auto completion plugin for vim. However, it requires &lt;a href=&quot;http://www.lua.org&quot;&gt;lua&lt;/a&gt;, which is not supported by vim default. You can easily install Vim by opening &amp;quot;Ubuntu Software Center&amp;quot;, then search for &lt;code&gt;Gvim&lt;/code&gt;, then click install. Here is a guide to compile Vim with &lt;code&gt;lua&lt;/code&gt; support from source. It was originally written by &lt;a href=&quot;https://github.com/Valloric/&quot;&gt;Valloric&lt;/a&gt;, the author of &lt;a href=&quot;https://github.com/Valloric/YouCompleteMe&quot;&gt;YouCompleteMe&lt;/a&gt;. The reason why I don&amp;#39;t use &lt;code&gt;YouCompleteMe&lt;/code&gt; is that I have never built it successfully :-( &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Install prerequisite libraries:    &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;sudo apt-get install libncurses5-dev libgnome2-dev libgnomeui-dev &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    libgtk2.0-dev libatk1.0-dev libbonoboui2-dev &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    libcairo2-dev libx11-dev libxpm-dev libxt-dev python-dev &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    ruby-dev mercurial
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Remove original Vim:     &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;sudo apt-get remove vim vim-runtime gvim
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Install lua:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;sudo apt-get install liblua5.2-dev lua5.2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Compile Vim74 from source:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;wget ftp://ftp.vim.org/pub/vim/unix/vim-7.4.tar.bz2
tar xvf vim-7.4.tar.bz2
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;vim74
./configure --with-features&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;huge &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
        --enable-multibyte &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
        --enable-rubyinterp &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
        --enable-pythoninterp &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
        --with-python-config-dir&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/lib/python2.7/config &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
        --enable-perlinterp &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
        --enable-luainterp &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
        --enable-gui&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;gtk2 --enable-cscope --prefix&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;set Vim RUNTIMEDIR:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;make &lt;span class=&quot;nv&quot;&gt;VIMRUNTIMEDIR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/share/vim/vim74
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finish install using &lt;code&gt;sudo make install&lt;/code&gt;.
To make it easier when uninstall, use &lt;code&gt;sudo checkinstall&lt;/code&gt; instead.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Set Vim as default editor:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;sudo update-alternatives --install /usr/bin/editor editor /usr/bin/vim 1
sudo update-alternatives --set editor /usr/bin/vim
sudo update-alternatives --install /usr/bin/vi vi /usr/bin/vim 1
sudo update-alternatives --set vi /usr/bin/vim
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Check installation by typing &lt;code&gt;vim --version&lt;/code&gt; in shell or &lt;code&gt;:echo has(&amp;quot;lua&amp;quot;)&lt;/code&gt; in vim.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here are some common settings:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;nmap &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;F3&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; :NeoCompleteToggle&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;CR&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;                    &lt;span class=&quot;c&quot;&gt;&amp;quot;toggle plugin using F3&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;g&lt;/span&gt;:neocomplete#enable_at_startup &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;             &lt;span class=&quot;c&quot;&gt;&amp;quot;start automatically&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;g&lt;/span&gt;:neocomplete#disable_auto_complete &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;         &lt;span class=&quot;c&quot;&gt;&amp;quot;auto completion&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;g&lt;/span&gt;:neocomplete#auto_completion_start_length &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;&amp;quot;do completion after input 3 keys&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;More info can be found by &lt;code&gt;:help neocomplete&lt;/code&gt;.&lt;br&gt;
Here is my &lt;a href=&quot;https://github.com/winter233/tools-conf/blob/master/.vimrc&quot;&gt;vimrc&lt;/a&gt; file.&lt;/p&gt;

&lt;p&gt;Ref: &lt;a href=&quot;https://github.com/Valloric/YouCompleteMe/wiki/Building-Vim-from-source&quot;&gt;Building Vim from source&lt;/a&gt;&lt;/p&gt;
</description>
                           <pubDate>Fri, 10 Jul 2015 00:00:00 +0800</pubDate>
                           <link>http://winter233.github.io/Using-Vim-with-Neocomplete/</link>
                           <guid isPermaLink="true">http://winter233.github.io/Using-Vim-with-Neocomplete/</guid>
                           </item>
                
                        <item>
                           <title>View Members of a Chain While Debugging with GDB</title>
                           <description>&lt;p&gt;To print a element of the whole chain, &lt;code&gt;user-defined commands&lt;/code&gt; can help.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A user-defined command is a sequence of gdb commands to which you assign a new name as a command.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;An example:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;define dump_node
    &lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$_node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Type*&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$arg0&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$_node&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;value is %d\n&amp;quot;&lt;/span&gt;, &lt;span class=&quot;nv&quot;&gt;$_node&lt;/span&gt;-&amp;gt;value
        &lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$_node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$_node&lt;/span&gt;-&amp;gt;next
    end
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;User-defined command&lt;/em&gt; start with &lt;code&gt;define command-name&lt;/code&gt;, the example above defines a command named dump_list. &lt;code&gt;$arg0&lt;/code&gt; stands for the first argument of the command, more arguments can be accepted, and the limitation is 10 (&lt;code&gt;$arg9&lt;/code&gt;). &lt;/p&gt;

&lt;p&gt;Save these user-defined command in a file, say &lt;code&gt;gdb.sh&lt;/code&gt;. To make it come into effect, using &lt;code&gt;source&lt;/code&gt; command in gdb shell:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;source gdb.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;use command:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;dump_node node
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also create a correspongding &lt;code&gt;help&lt;/code&gt; info using &lt;code&gt;document&lt;/code&gt;.  See the example below:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;document dump_node
    usage: dump_node _node
    dump_node is used to dump all elements in _node chain.
    arg0 is the head of the chain.
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Document of a command is optional. Check these info in gdb shell:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;help dump_node
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ref:&lt;br&gt;
&lt;a href=&quot;http://sourceware.org/gdb/current/onlinedocs/gdb/Define.html&quot;&gt;User-defined Command&lt;/a&gt;&lt;/p&gt;
</description>
                           <pubDate>Tue, 14 Apr 2015 00:00:00 +0800</pubDate>
                           <link>http://winter233.github.io/View-Members-of-a-Chain-While-Debugging-with-GDB/</link>
                           <guid isPermaLink="true">http://winter233.github.io/View-Members-of-a-Chain-While-Debugging-with-GDB/</guid>
                           </item>
                
        </channel>
</rss>
